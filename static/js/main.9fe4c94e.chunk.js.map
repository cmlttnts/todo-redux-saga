{"version":3,"sources":["utils.js","components/SortSelect.js","redux/actions/index.js","redux/actions/actionCreators.js","components/AddTodo.js","components/Todo.js","components/Todos.js","components/App.js","redux/reducers/index.js","Api.js","redux/sagas/index.js","redux/store.js","index.js"],"names":["MS_TO_HOUR","MS_TO_DAY","getDivisionAndRemainder","num","divider","Math","floor","ceil","SORT_OPTIONS","alphabetical","createdAt","untilDeadline","DEFAULT_SORT","SORT_FUNCS","todoA","todoB","content","toLowerCase","localeCompare","isComplete","deadline","Option","Select","SortSelect","onSortSelect","defaultValue","onChange","optionKey","Object","entries","map","key","option","value","REDUCER_ACTIONS","APP_ACTIONS","APP_ACTION_CREATORS","type","todo","payload","todoId","REDUCER_ACTION_CREATORS","loadInitSuccess","todos","loadInitFailure","initiateUpdateTodo","addTodoSuccess","toggleTodoSuccess","toggleTodoFailure","removeTodoSuccess","updateTodoFailure","userAckFailure","TextArea","Input","AddTodo","onSortChange","isLoading","useSelector","state","update","dispatch","useDispatch","useState","text","setText","setDeadline","AddTodoStyled","className","e","target","showTime","showSecond","valueOf","onClick","loading","disabled","styled","div","Todo","deleteModalVisible","setDeleteModalVisible","diffInMs","Date","now","days","hours","hoursLeftover","minutes","formatDuration","delimiter","getTimeUntilDeadline","timeUntilDeadline","isPassed","TodoStyled","TodoInnerStyled","TodoActionsStyled","checkedChildren","unCheckedChildren","checked","id","danger","visible","onCancel","handleDeleteCancel","footer","toLocaleString","props","Todos","errors","sortBy","setSortBy","sortedTodos","sort","useEffect","Modal","error","title","onOk","TodosStyled","App","init","LoadingContainerStyled","INIT_STATE","API","_fetch","url","options","result","data","fetch","response","ok","json","fetchInitialTodosApi","addTodoApi","method","body","JSON","stringify","headers","toggleTodoApi","removeTodoApi","fetchInitialTodos","watchInitialLoad","addTodo","watchAddTodo","toggleTodo","watchToggleTodo","removeTodo","watchRemoveTodo","ackFailure","watchAckFailure","rootSaga","call","actionCreator","post","uuid","random","slice","put","takeLatest","action","newAction","fork","sagaMiddleware","createSagaMiddleware","enhancedMiddlewares","composeWithDevTools","applyMiddleware","store","createStore","produce","draft","push","toggledTodo","find","console","failedTodo","removedTodoIndex","findIndex","splice","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe4c94e.chunk.js","sourcesContent":["import formatDuration from \"date-fns/formatDuration\";\n\nconst MS_TO_SECOND = 1_000;\n\nconst MS_TO_MINUTE = 60 * MS_TO_SECOND;\n\nexport const MS_TO_HOUR = 60 * MS_TO_MINUTE;\n\nexport const MS_TO_DAY = 24 * MS_TO_HOUR;\n\nexport function getTimeUntilDeadline(deadline) {\n  const diffInMs = deadline - Date.now();\n\n  const [days, daysLeftover] = getDivisionAndRemainder(diffInMs, MS_TO_DAY);\n  const [hours, hoursLeftover] = getDivisionAndRemainder(daysLeftover, MS_TO_HOUR);\n  const minutes = Math.floor(hoursLeftover / MS_TO_MINUTE);\n\n  return [\n    formatDuration(\n      {\n        days,\n        hours,\n        minutes\n      },\n      { delimiter: \",\" }\n    ),\n    diffInMs < 0\n  ];\n}\n\nfunction getDivisionAndRemainder(num, divider) {\n  const division = num >= 0 ? Math.floor(num / divider) : Math.ceil(num / divider);\n  const remainder = num % divider;\n  return [division, remainder];\n}\n\nexport const SORT_OPTIONS = {\n  alphabetical: \"Alphabetical\",\n  createdAt: \"Creation Time\",\n  untilDeadline: \"Until Deadline\"\n};\n\nexport const DEFAULT_SORT = SORT_OPTIONS.createdAt;\n\nexport const SORT_FUNCS = {\n  [SORT_OPTIONS.alphabetical]: (todoA, todoB) => {\n    return todoA.content[0].toLowerCase().localeCompare(todoB.content[0].toLowerCase());\n  },\n  [SORT_OPTIONS.createdAt]: (todoA, todoB) => todoA.createdAt - todoB.createdAt,\n  [SORT_OPTIONS.untilDeadline]: (todoA, todoB) => {\n    if (todoA.isComplete || !todoA.deadline) return 1;\n    if (todoB.isComplete || !todoB.deadline) return -1;\n    return todoA.deadline - todoB.deadline;\n  }\n};\n","import { Select } from \"antd\";\nimport { DEFAULT_SORT, SORT_OPTIONS } from \"utils\";\n\nconst { Option } = Select;\n\nconst SortSelect = ({ onSortSelect }) => {\n  return (\n    <Select\n      defaultValue={DEFAULT_SORT}\n      onChange={optionKey => {\n        onSortSelect(SORT_OPTIONS[optionKey]);\n      }}>\n      {Object.entries(SORT_OPTIONS).map(([key, option]) => (\n        <Option key={key} value={key}>\n          {option}\n        </Option>\n      ))}\n    </Select>\n  );\n};\nexport default SortSelect;\n","export const REDUCER_ACTIONS = {\n  INITAL_LOAD_SUCCESS: \"INITAL_LOAD_SUCCESS\",\n  INITAL_LOAD_FAILURE: \"INITAL_LOAD_FAILURE\",\n  INITIATE_UPDATE_TODO: \"INITIATE_UPDATE_TODO\",\n  ADD_TODO_SUCCESS: \"ADD_TODO_SUCCESS\",\n  TOGGLE_TODO_SUCCESS: \"TOGGLE_TODO_SUCCESS\",\n  TOGGLE_TODO_FAILURE: \"TOGGLE_TODO_FAILURE\",\n  REMOVE_TODO_SUCCESS: \"REMOVE_TODO_SUCCESS\",\n  UPDATE_TODO_FAILURE: \"UPDATE_TODO_FAILURE\",\n  USER_CONFIRMS_UPDATE_FAILURE: \"USER_CONFIRMS_UPDATE_FAILURE\"\n};\n\nexport const APP_ACTIONS = {\n  INITAL_LOAD_REQUEST: \"INITAL_LOAD_REQUEST\",\n  ADD_TODO_REQUEST: \"ADD_TODO_REQUEST\",\n  TOGGLE_TODO_REQUEST: \"TOGGLE_TODO_REQUEST\",\n  REMOVE_TODO_REQUEST: \"REMOVE_TODO_REQUEST\",\n  ACKNOWLEDGE_UPDATE_FAILURE: \"ACKNOWLEDGE_UPDATE_FAILURE\"\n};\n","import { APP_ACTIONS, REDUCER_ACTIONS } from \"redux/actions\";\n\nexport const APP_ACTION_CREATORS = {\n  requestInitLoad() {\n    return {\n      type: APP_ACTIONS.INITAL_LOAD_REQUEST\n    };\n  },\n  requestAddTodo(todo) {\n    return {\n      type: APP_ACTIONS.ADD_TODO_REQUEST,\n      payload: todo\n    };\n  },\n  requestToggleTodo(todo) {\n    return {\n      type: APP_ACTIONS.TOGGLE_TODO_REQUEST,\n      payload: todo\n    };\n  },\n  requestRemoveTodo(todoId) {\n    return {\n      type: APP_ACTIONS.REMOVE_TODO_REQUEST,\n      payload: todoId\n    };\n  },\n  ackFailure() {\n    return {\n      type: APP_ACTIONS.ACKNOWLEDGE_UPDATE_FAILURE\n    };\n  }\n};\n\n// REDUCER ACTION CREATORS\nexport const REDUCER_ACTION_CREATORS = {\n  loadInitSuccess(todos) {\n    return {\n      type: REDUCER_ACTIONS.INITAL_LOAD_SUCCESS,\n      payload: todos\n    };\n  },\n\n  loadInitFailure() {\n    return {\n      type: REDUCER_ACTIONS.INITAL_LOAD_FAILURE\n    };\n  },\n\n  initiateUpdateTodo() {\n    return {\n      type: REDUCER_ACTIONS.INITIATE_UPDATE_TODO\n    };\n  },\n\n  addTodoSuccess(todo) {\n    return {\n      type: REDUCER_ACTIONS.ADD_TODO_SUCCESS,\n      payload: todo\n    };\n  },\n\n  toggleTodoSuccess(todo) {\n    return {\n      type: REDUCER_ACTIONS.TOGGLE_TODO_SUCCESS,\n      payload: todo\n    };\n  },\n  toggleTodoFailure(todo) {\n    return {\n      type: REDUCER_ACTIONS.TOGGLE_TODO_FAILURE,\n      payload: todo\n    };\n  },\n\n  removeTodoSuccess(todoId) {\n    return {\n      type: REDUCER_ACTIONS.REMOVE_TODO_SUCCESS,\n      payload: todoId\n    };\n  },\n\n  updateTodoFailure() {\n    return {\n      type: REDUCER_ACTIONS.UPDATE_TODO_FAILURE\n    };\n  },\n  userAckFailure() {\n    return {\n      type: REDUCER_ACTIONS.USER_CONFIRMS_UPDATE_FAILURE\n    };\n  }\n};\n","import styled from \"@emotion/styled\";\nimport { Button, DatePicker, Input } from \"antd\";\nimport SortSelect from \"components/SortSelect\";\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { APP_ACTION_CREATORS } from \"redux/actions/actionCreators\";\n\nconst { TextArea } = Input;\n\nconst AddTodo = ({ onSortChange }) => {\n  const isLoading = useSelector(state => state.isLoading.update);\n  const dispatch = useDispatch();\n\n  const [text, setText] = useState(\"\");\n  const [deadline, setDeadline] = useState(\"\");\n\n  return (\n    <AddTodoStyled>\n      <div className=\"add-todo-inputs\">\n        <label className=\"content-label\">\n          Todo:\n          <TextArea\n            value={text}\n            onChange={e => {\n              setText(e.target.value);\n            }}\n          />\n        </label>\n        <div>\n          <label>\n            Deadline:\n            <DatePicker\n              showTime\n              showSecond={false}\n              onChange={e => {\n                setDeadline(e.valueOf());\n              }}\n            />\n          </label>\n        </div>\n      </div>\n      <div className=\"add-todo-actions\">\n        <label>\n          Sort: <SortSelect onSortSelect={onSortChange} />\n        </label>\n        <Button onClick={() => setText(\"\")}>Clear</Button>\n        <Button\n          type=\"primary\"\n          loading={isLoading}\n          onClick={() => {\n            dispatch(\n              APP_ACTION_CREATORS.requestAddTodo({\n                content: text,\n                deadline\n              })\n            );\n            setText(\"\");\n          }}\n          disabled={!text}>\n          Add\n        </Button>\n      </div>\n    </AddTodoStyled>\n  );\n};\n\nexport default AddTodo;\n\nconst AddTodoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  & > .add-todo-inputs {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    label > * {\n      margin-bottom: 12px;\n      margin-left: 10px;\n    }\n    @media (min-width: 768px) {\n      flex-direction: row;\n      label > .ant-picker {\n        margin-left: 0px;\n      }\n    }\n  }\n  .content-label {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    & > textarea {\n      margin-left: 1rem;\n      font-size: 1.1rem;\n      @media (min-width: 768px) {\n        max-width: 70%;\n      }\n    }\n  }\n\n  & > .add-todo-actions {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 5px;\n    & > *:not(:last-child) {\n      margin-right: 1rem;\n    }\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { Button, Modal, Switch } from \"antd\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { APP_ACTION_CREATORS } from \"redux/actions/actionCreators\";\nimport { getTimeUntilDeadline } from \"utils\";\n\nconst Todo = ({ todo, isLoading }) => {\n  const dispatch = useDispatch();\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const [timeUntilDeadline, isPassed] = todo.deadline\n    ? getTimeUntilDeadline(todo.deadline)\n    : [null, null];\n  return (\n    <TodoStyled isComplete={todo.isComplete}>\n      <TodoInnerStyled>\n        <div>{todo.content}</div>\n        <TodoActionsStyled>\n          <Switch\n            checkedChildren=\"Done\"\n            unCheckedChildren=\"Doing\"\n            checked={todo.isComplete}\n            onChange={() => {\n              dispatch(\n                APP_ACTION_CREATORS.requestToggleTodo({ id: todo.id, isComplete: !todo.isComplete })\n              );\n            }}\n          />\n          <Button danger type=\"primary\" onClick={() => setDeleteModalVisible(true)}>\n            Delete\n          </Button>\n        </TodoActionsStyled>\n        <Modal\n          visible={deleteModalVisible}\n          onCancel={handleDeleteCancel}\n          footer={[\n            <Button key=\"back\" onClick={handleDeleteCancel}>\n              Cancel\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" loading={isLoading} onClick={handleDeleteOk}>\n              Yes\n            </Button>\n          ]}>\n          Are you sure you want to delete this todo?\n        </Modal>\n      </TodoInnerStyled>\n      {!todo.isComplete && timeUntilDeadline && (\n        <div className=\"deadline\">\n          {isPassed && <span className=\"warn-deadline\">!</span>}\n          Until deadline: {timeUntilDeadline}\n        </div>\n      )}\n      <div className=\"created-at\">Created at: {new Date(todo.createdAt).toLocaleString()}</div>\n    </TodoStyled>\n  );\n\n  function handleDeleteOk() {\n    dispatch(APP_ACTION_CREATORS.requestRemoveTodo(todo.id));\n  }\n  function handleDeleteCancel() {\n    setDeleteModalVisible(false);\n  }\n};\n\nexport default Todo;\n\nconst TodoStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  border: 2px solid grey;\n  border-radius: 4px;\n  padding: 5px 10px;\n  margin: 10px 0;\n  background-color: ${props => (props.isComplete ? \"rgba(186, 252, 3, 0.6)\" : \"lavender\")};\n  & > .deadline {\n    border-top: 2px solid grey;\n    padding-left: 5px;\n  }\n  & > .created-at {\n    border-top: 2px solid grey;\n    padding-left: 5px;\n  }\n\n  & .warn-deadline {\n    padding: 0 4px;\n    margin-right: 4px;\n    font-size: 1.1rem;\n    color: red;\n    border: 2px dashed red;\n  }\n`;\n\nconst TodoInnerStyled = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nconst TodoActionsStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  & > button {\n    margin-bottom: 5px;\n  }\n  & > button[role=\"switch\"] {\n    width: 90%;\n  }\n`;\n","import styled from \"@emotion/styled\";\nimport { Modal } from \"antd\";\nimport AddTodo from \"components/AddTodo\";\nimport Todo from \"components/Todo\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { APP_ACTION_CREATORS } from \"redux/actions/actionCreators\";\nimport { DEFAULT_SORT, SORT_FUNCS } from \"utils\";\n\nconst Todos = () => {\n  const { todos, errors, isLoading } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const [sortBy, setSortBy] = useState(DEFAULT_SORT);\n\n  const sortedTodos = [...todos].sort(SORT_FUNCS[sortBy]);\n\n  useEffect(() => {\n    if (errors.update) {\n      Modal.error({\n        title: \"Connection Error\",\n        content: \"Your changes were not successful. Please try again\",\n        onOk: () => {\n          dispatch(APP_ACTION_CREATORS.ackFailure());\n        }\n      });\n    }\n  });\n\n  return (\n    <TodosStyled>\n      <AddTodo onSortChange={setSortBy} />\n      {sortedTodos.map(todo => (\n        <Todo key={todo.id} todo={todo} isLoading={isLoading.update} />\n      ))}\n    </TodosStyled>\n  );\n};\nexport default Todos;\n\nconst TodosStyled = styled.div`\n  width: 90%;\n  max-width: 800px;\n`;\n","import styled from \"@emotion/styled\";\nimport { Spin } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"components/App.css\";\nimport Todos from \"components/Todos\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { APP_ACTION_CREATORS } from \"redux/actions/actionCreators\";\n\nconst App = () => {\n  const { errors, isLoading } = useSelector(state => state);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(APP_ACTION_CREATORS.requestInitLoad());\n  }, [dispatch]);\n\n  if (errors.init) {\n    return <p>Cannot reach the server, please try again after some time</p>;\n  }\n\n  if (isLoading.init) {\n    return (\n      <LoadingContainerStyled>\n        <Spin />;\n      </LoadingContainerStyled>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Todo App</h1>\n      <Todos />\n    </div>\n  );\n};\nexport default App;\n\nconst LoadingContainerStyled = styled.div`\n  display: grid;\n  place-items: center;\n  width: 100vw;\n  height: 100vh;\n`;\n","import produce from \"immer\";\nimport { REDUCER_ACTIONS } from \"redux/actions\";\n\n/**\n * todo: {\n *   id: string,\n *   content: string,\n *   createdAt: number, // unix timestamp in milliseconds\n *   deadline: number, // unix timestamp in milliseconds\n *   isComplete: boolean\n * }\n */\n\nconst INIT_STATE = {\n  todos: [],\n  errors: {\n    init: false,\n    update: false\n  },\n  isLoading: {\n    init: true,\n    update: false\n  }\n};\n\nexport default function rootReducer(state = INIT_STATE, action) {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REDUCER_ACTIONS.INITAL_LOAD_SUCCESS:\n        draft.todos = action.payload;\n        draft.isLoading.init = false;\n        draft.errors.init = false;\n        break;\n      case REDUCER_ACTIONS.INITAL_LOAD_FAILURE:\n        draft.errors.init = true;\n        draft.isLoading.init = false;\n        break;\n      case REDUCER_ACTIONS.INITIATE_UPDATE_TODO:\n        draft.isLoading.update = true;\n        break;\n      case REDUCER_ACTIONS.ADD_TODO_SUCCESS:\n        draft.isLoading.update = false;\n        draft.todos.push(action.payload);\n        break;\n      case REDUCER_ACTIONS.TOGGLE_TODO_SUCCESS:\n        const toggledTodo = draft.todos.find(todo => todo.id === action.payload.id);\n        if (toggledTodo) toggledTodo.isComplete = action.payload.isComplete;\n        else console.error(\"Non-existing todo toggling attempt\");\n        break;\n      case REDUCER_ACTIONS.TOGGLE_TODO_FAILURE:\n        const failedTodo = draft.todos.find(todo => todo.id === action.payload.id);\n        if (failedTodo) {\n          failedTodo.isComplete = !action.payload.isComplete;\n          draft.errors.update = true;\n        } else console.error(\"Non-existing todo toggling attempt\");\n        break;\n      case REDUCER_ACTIONS.REMOVE_TODO_SUCCESS:\n        draft.isLoading.update = false;\n        const removedTodoIndex = draft.todos.findIndex(todo => todo.id === action.payload);\n        if (removedTodoIndex > -1) draft.todos.splice(removedTodoIndex, 1);\n        else console.error(\"Non-existing todo removal attempt\");\n        break;\n      // gather all crud operation failures except first load\n      case REDUCER_ACTIONS.UPDATE_TODO_FAILURE:\n        draft.errors.update = true;\n        break;\n      case REDUCER_ACTIONS.USER_CONFIRMS_UPDATE_FAILURE:\n        draft.errors.update = false;\n        draft.isLoading.update = false;\n        break;\n      default:\n        break;\n    }\n  });\n}\n","const API = {\n  async _fetch(url, options) {\n    const result = {\n      data: null,\n      error: null\n    };\n    try {\n      const response = await fetch(url, options);\n      if (response.ok) {\n        result.data = await response.json();\n      } else {\n        result.error = true;\n      }\n    } catch (error) {\n      result.error = true;\n    }\n    return result;\n  },\n\n  async fetchInitialTodosApi() {\n    return API._fetch(\"https://jsonplaceholder.typicode.com/posts?_start=0&_limit=5\");\n  },\n  async addTodoApi(todo) {\n    return API._fetch(\"https://jsonplaceholder.typicode.com/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(todo),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  },\n  async toggleTodoApi(todo) {\n    return API._fetch(`https://jsonplaceholder.typicode.com/posts/${todo.id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        id: todo.id,\n        isComplete: todo.isComplete\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    });\n  },\n  async removeTodoApi(todoId) {\n    return API._fetch(`https://jsonplaceholder.typicode.com/posts/${todoId}`, {\n      method: \"DELETE\"\n    });\n  }\n};\n\nexport default API;\n","import API from \"Api\";\nimport { call, fork, put, takeLatest } from \"redux-saga/effects\";\nimport { APP_ACTIONS } from \"redux/actions\";\nimport { REDUCER_ACTION_CREATORS } from \"redux/actions/actionCreators\";\nimport { MS_TO_DAY, MS_TO_HOUR } from \"utils\";\nimport { v4 as uuid } from \"uuid\";\n\nfunction* fetchInitialTodos() {\n  const result = yield call(API.fetchInitialTodosApi);\n  const actionCreator = result.error\n    ? REDUCER_ACTION_CREATORS.loadInitFailure\n    : REDUCER_ACTION_CREATORS.loadInitSuccess;\n\n  if (!result.error) {\n    // convert fake posts data into todo data\n    result.data = result.data.map(post => {\n      return {\n        id: uuid(),\n        // assing random timestamp in the last hour\n        createdAt: Date.now() - Math.random() * MS_TO_HOUR,\n        content: post.body.slice(0, 50),\n        isComplete: Math.random() > 0.5,\n        // assing random timestamp on the next day\n        deadline: Date.now() + Math.random() * MS_TO_DAY\n      };\n    });\n  }\n  yield put(actionCreator(result.data));\n}\n\nfunction* watchInitialLoad() {\n  yield takeLatest(APP_ACTIONS.INITAL_LOAD_REQUEST, fetchInitialTodos);\n}\n\nfunction* addTodo(action) {\n  yield put(REDUCER_ACTION_CREATORS.initiateUpdateTodo());\n  const newAction = { ...action };\n  newAction.payload = { ...action.payload, createdAt: Date.now(), isComplete: false };\n  const result = yield call(API.addTodoApi, newAction.payload);\n  const actionCreator = result.error\n    ? REDUCER_ACTION_CREATORS.updateTodoFailure\n    : REDUCER_ACTION_CREATORS.addTodoSuccess;\n  // jsonplaceholder would always return id:101, workaround that\n  if (!result.error) {\n    result.data.id = uuid();\n  }\n  yield put(actionCreator(result.data));\n}\n\nfunction* watchAddTodo() {\n  yield takeLatest(APP_ACTIONS.ADD_TODO_REQUEST, addTodo);\n}\n\nfunction* toggleTodo(action) {\n  // lets assume successful toggle first to increase reaction time\n  yield put(REDUCER_ACTION_CREATORS.toggleTodoSuccess(action.payload));\n  const result = yield call(API.toggleTodoApi, action.payload);\n  if (result.error) {\n    // in case of error, we can revert it\n    yield put(REDUCER_ACTION_CREATORS.toggleTodoFailure(action.payload));\n  }\n}\n\nfunction* watchToggleTodo() {\n  yield takeLatest(APP_ACTIONS.TOGGLE_TODO_REQUEST, toggleTodo);\n}\n\nfunction* removeTodo(action) {\n  yield put(REDUCER_ACTION_CREATORS.initiateUpdateTodo());\n  const result = yield call(API.removeTodoApi, action.payload);\n  const actionCreator = result.error\n    ? REDUCER_ACTION_CREATORS.updateTodoFailure\n    : REDUCER_ACTION_CREATORS.removeTodoSuccess;\n  yield put(actionCreator(action.payload));\n}\n\nfunction* watchRemoveTodo() {\n  yield takeLatest(APP_ACTIONS.REMOVE_TODO_REQUEST, removeTodo);\n}\n\nfunction* ackFailure(action) {\n  yield put(REDUCER_ACTION_CREATORS.userAckFailure(action));\n}\n\nfunction* watchAckFailure() {\n  yield takeLatest(APP_ACTIONS.ACKNOWLEDGE_UPDATE_FAILURE, ackFailure);\n}\n\nexport default function* rootSaga() {\n  yield fork(watchInitialLoad);\n  yield fork(watchAddTodo);\n  yield fork(watchToggleTodo);\n  yield fork(watchRemoveTodo);\n  yield fork(watchAckFailure);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"redux/reducers\";\nimport rootSaga from \"redux/sagas\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst enhancedMiddlewares = composeWithDevTools(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(rootReducer, enhancedMiddlewares);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import App from \"components/App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}